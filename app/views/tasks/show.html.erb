<% if notice %>
  <div class="alert alert-success mb-4">
    <svg xmlns="http://www.w3.org/2000/svg" class="stroke-current flex-shrink-0 h-6 w-6" fill="none" viewBox="0 0 24 24">
      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z" />
    </svg>
    <span><%= notice %></span>
  </div>
<% end %>

<%= turbo_stream_from @task, "task_updates" %>

<div class="container mx-auto px-4 py-8 max-w-4xl" id="task-container">
  <!-- Task Header -->
  <div class="card bg-base-100 shadow-lg mb-6">
    <div class="card-body">
      <div class="flex items-center justify-between mb-4">
        <div class="flex items-center gap-4">
          <% if @task.emoji.present? %>
            <span class="text-5xl"><%= @task.emoji %></span>
          <% end %>
          <div>
            <h1 class="text-3xl font-bold"><%= @task.name %></h1>
            <% if @task.slogan.present? %>
              <p class="text-base-content/60 mt-1"><%= @task.slogan %></p>
            <% end %>
          </div>
        </div>
        <div class="badge badge-lg <%= case @task.status
          when 'active' then 'badge-success'
          when 'paused' then 'badge-warning'
          when 'completed' then 'badge-info'
          when 'archived' then 'badge-ghost'
          end %>">
          <%= t("tasks.show.status.#{@task.status}") %>
        </div>
      </div>
    </div>
  </div>

  <!-- Numerical Task Display -->
  <% if @task.taskable_type == 'NumericalTask' %>
    <% 
      current_value = @task.taskable.value.to_i
      total_cells = 100
      filled_cells = [current_value, total_cells].min
      progress_percentage = (filled_cells.to_f / total_cells * 100).round(1)
      task_emoji = @task.emoji.present? ? @task.emoji : '⭐'
    %>
    
    <!-- Progress Stats -->
    <div class="card bg-base-100 shadow-lg mb-6" id="progress-stats">
      <div class="card-body p-4 sm:p-6">
        <div class="flex flex-col sm:flex-row items-center justify-between gap-4 sm:gap-0 mb-4">
          <div class="text-center sm:text-left">
            <div class="text-sm text-base-content/60 mb-1"><%= t('tasks.show.current_progress') %></div>
            <div class="text-3xl sm:text-4xl font-bold counter-animation" 
                 style="color: <%= @task.background || '#6366f1' %>"
                 data-target="<%= current_value %>">
              0
              <span class="text-xl sm:text-2xl text-base-content/60">/ 100</span>
            </div>
            <% if @task.taskable.value_unit.present? %>
              <div class="text-sm text-base-content/60 mt-1">
                <%= @task.taskable.value_unit %>
              </div>
            <% end %>
          </div>
          <div class="text-center sm:text-right">
            <div class="text-sm text-base-content/60 mb-1"><%= t('tasks.show.completion') %></div>
            <div class="text-3xl sm:text-4xl font-bold counter-animation" 
                 style="color: <%= @task.background || '#6366f1' %>"
                 data-target="<%= progress_percentage %>">
              0%
            </div>
            <div class="text-sm text-base-content/60 mt-1">
              <span class="counter-animation" data-target="<%= 100 - filled_cells %>">0</span>
              <%= t('tasks.show.remaining') %>
            </div>
          </div>
        </div>
        
        <!-- Progress Bar -->
        <div class="w-full bg-base-200 rounded-full h-3 overflow-hidden">
          <div class="progress-bar-animation h-3 rounded-full" 
               style="width: 0%; background-color: <%= @task.background || '#6366f1' %>"
               data-width="<%= progress_percentage %>">
          </div>
        </div>
      </div>
    </div>

    <!-- Value Operations - Only for task owner -->
    <% if authenticated? && @task.user == Current.user %>
      <div class="card bg-base-100 shadow-lg mb-6">
        <div class="card-body p-4 sm:p-6">
          <h2 class="text-lg sm:text-xl font-bold mb-3 sm:mb-4"><%= t('tasks.show.update_value') %></h2>
          
          <%= form_with url: task_task_entries_path(@task), method: :post, class: "space-y-4" do |form| %>
            <div class="form-control">
              <%= form.label :value, t('tasks.show.value_label'), class: "label" %>
              <%= form.number_field :value, value: 1, min: 0, max: 100, 
                  class: "input input-bordered w-full", required: true %>
            </div>
            
            <div class="grid grid-cols-1 sm:grid-cols-3 gap-3">
              <%= form.button type: "submit", name: "operation", value: "increment", 
                  class: "btn btn-success" do %>
                <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4v16m8-8H4" />
                </svg>
                <%= t('tasks.show.increment') %>
              <% end %>
              
              <%= form.button type: "submit", name: "operation", value: "decrement", 
                  class: "btn btn-warning" do %>
                <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M20 12H4" />
                </svg>
                <%= t('tasks.show.decrement') %>
              <% end %>
              
              <%= form.button type: "submit", name: "operation", value: "set", 
                  class: "btn btn-info" do %>
                <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z" />
                </svg>
                <%= t('tasks.show.set') %>
              <% end %>
            </div>
            
            <div class="text-sm text-base-content/60">
              <%= t('tasks.show.operation_hint') %>
            </div>
          <% end %>
        </div>
      </div>
    <% else %>
      <!-- Guest view message -->
      <div class="card bg-base-100 shadow-lg mb-6">
        <div class="card-body p-4 sm:p-6 text-center">
          <div class="text-base-content/60">
            <%= t('tasks.show.guest_view_message') %>
          </div>
        </div>
      </div>
    <% end %>

    <!-- 100 Grid Display -->
    <div class="card bg-base-100 shadow-lg mb-6" id="achievement-grid-container">
      <div class="card-body p-4 sm:p-6">
        <h2 class="text-lg sm:text-xl font-bold mb-3 sm:mb-4"><%= t('tasks.show.achievement_grid') %></h2>
        <div class="grid grid-cols-5 sm:grid-cols-8 md:grid-cols-10 gap-1 sm:gap-2 p-2 sm:p-4 bg-base-200 rounded-lg" id="achievement-grid">
          <% total_cells.times do |i| %>
            <% is_filled = i < filled_cells %>
            <div class="grid-cell aspect-square rounded flex items-center justify-center text-lg sm:text-xl md:text-2xl bg-base-300 opacity-0"
                 data-index="<%= i %>"
                 data-filled="<%= is_filled %>"
                 data-emoji="<%= task_emoji %>"
                 style="animation-delay: <%= i * 0.02 %>s;"
                 title="<%= i + 1 %> / 100">
            </div>
          <% end %>
        </div>
        
        <% if current_value >= 100 %>
          <div class="alert alert-success mt-4">
            <svg xmlns="http://www.w3.org/2000/svg" class="stroke-current flex-shrink-0 h-6 w-6" fill="none" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z" />
            </svg>
            <span><%= t('tasks.show.congratulations') %></span>
          </div>
        <% else %>
          <div class="text-center mt-4 text-base-content/60">
            <%= t('tasks.show.keep_going', remaining: 100 - filled_cells) %>
          </div>
        <% end %>
      </div>
    </div>

    <!-- Recent Activity -->
    <% recent_entries = @task.entries.order(created_at: :desc).limit(5) %>
    <% if recent_entries.any? %>
      <div class="card bg-base-100 shadow-lg mb-6" id="recent-activity">
        <div class="card-body p-4 sm:p-6">
          <h2 class="text-lg sm:text-xl font-bold mb-3 sm:mb-4"><%= t('tasks.show.recent_activity') %></h2>
          <div class="space-y-2">
            <% recent_entries.each do |entry| %>
              <div class="flex flex-col sm:flex-row sm:items-center sm:justify-between gap-2 p-3 bg-base-200 rounded">
                <div>
                  <span class="font-medium capitalize"><%= entry.operation %></span>
                  <span class="text-base-content/60 text-sm ml-2">
                    <%= entry.value_before %> → <%= entry.value_after %>
                  </span>
                </div>
                <div class="text-sm text-base-content/60">
                  <%= entry.created_at.strftime('%Y-%m-%d %H:%M') %>
                </div>
              </div>
            <% end %>
          </div>
        </div>
      </div>
    <% end %>
  <% end %>

  <!-- Action Buttons - Only for task owner -->
  <% if authenticated? && @task.user == Current.user %>
    <div class="flex flex-col sm:flex-row gap-3 sm:gap-4 justify-center">
      <%= link_to t('tasks.edit_task'), edit_task_path(@task), class: "btn btn-primary btn-sm sm:btn-md" %>
      <%= link_to t('tasks.title'), tasks_path, class: "btn btn-outline btn-sm sm:btn-md" %>
      <%= button_to t('tasks.delete_task'), @task, method: :delete, 
          data: { confirm: t('tasks.confirm_delete') }, 
          class: "btn btn-error btn-sm sm:btn-md" %>
    </div>
  <% else %>
    <div class="flex flex-col sm:flex-row gap-3 sm:gap-4 justify-center">
      <%= link_to t('tasks.title'), tasks_path, class: "btn btn-outline btn-sm sm:btn-md" %>
    </div>
  <% end %>
</div>

<style>
  @keyframes gridFadeIn {
    from {
      opacity: 0;
      transform: scale(0.3) rotate(-10deg);
    }
    to {
      opacity: 1;
      transform: scale(1) rotate(0deg);
    }
  }
  
  .grid-cell {
    animation: gridFadeIn 0.4s ease-out forwards;
    transition: all 0.3s ease;
  }
  
  .grid-cell:hover {
    transform: scale(1.1);
  }
  
  @keyframes progressBarGrow {
    from {
      width: 0%;
    }
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    // Animate grid cells
    const cells = document.querySelectorAll('.grid-cell');
    cells.forEach((cell, index) => {
      const isFilled = cell.dataset.filled === 'true';
      const emoji = cell.dataset.emoji;
      
      setTimeout(() => {
        if (isFilled) {
          cell.textContent = emoji;
          cell.classList.add('shadow-md');
          cell.style.backgroundColor = '<%= @task.background || "#6366f1" %>';
        }
      }, index * 20);
    });
    
    // Animate counters
    const animateCounter = (element, target, suffix = '') => {
      const duration = 1500;
      const steps = 60;
      const increment = target / steps;
      let current = 0;
      
      const timer = setInterval(() => {
        current += increment;
        if (current >= target) {
          current = target;
          clearInterval(timer);
        }
        element.textContent = Math.round(current) + suffix;
      }, duration / steps);
    };
    
    // Animate all counters
    document.querySelectorAll('.counter-animation').forEach(counter => {
      const target = parseFloat(counter.dataset.target);
      const hasPercent = counter.textContent.includes('%');
      const suffix = hasPercent ? '%' : '';
      
      setTimeout(() => {
        animateCounter(counter, target, suffix);
      }, 300);
    });
    
    // Animate progress bar
    const progressBar = document.querySelector('.progress-bar-animation');
    if (progressBar) {
      setTimeout(() => {
        progressBar.style.transition = 'width 1.5s ease-out';
        progressBar.style.width = progressBar.dataset.width + '%';
      }, 300);
    }
  });
</script>
